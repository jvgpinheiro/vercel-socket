import Head from "next/head";
// import { Inter } from "next/font/google";
import { useEffect, useState } from "react";
import { io, Socket } from "socket.io-client";
import {
  ServerReceiverEvents,
  ServerSenderEvents,
} from "../types/WebSocketMessageTypes";
import { CancelablePromise } from "../utils/TypeUtils";
import { cancelablePromise } from "../utils/PromiseUtils";

export default function Home({}) {
  const [socket, setSocket] = useState<Socket<
    ServerSenderEvents,
    ServerReceiverEvents
  > | null>(null);
  const [isConnecting, setIsConnecting] = useState<boolean>(false);

  useEffect(() => {
    if (isConnecting) {
      return;
    }
    disconnect();
    const cancelablePromise = connect();
    return () => {
      cancelablePromise.cancel();
      disconnect();
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  useEffect(() => {}, [isConnecting]);

  function disconnect() {
    socket && socket.disconnect();
  }

  function connect(): CancelablePromise<Response> {
    setIsConnecting(true);
    const originalPromise = fetch("/api/socket/", { method: "GET" });
    const promiseData = cancelablePromise(originalPromise);
    promiseData.promise
      .then((res) => {
        if (res.status !== 200) {
          setSocket(null);
          return;
        }

        const newSocket: Socket<ServerSenderEvents, ServerReceiverEvents> = io({
          path: "/api/io/socket.io",
        });
        newSocket.on("connect", () => {
          newSocket.emit("subscribe-message", { id: Math.random().toString() });
          newSocket.on("new-message", ({ message }) => console.log(message));
        });
        setSocket(newSocket);
      })
      .catch(() => setSocket(null))
      .finally(() => {
        setIsConnecting(false);
      });
    return promiseData;
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>Data</div>
      </main>
    </>
  );
}
